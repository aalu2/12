//Answer of 1

#include <stdio.h>
int main()
{
    int size, m, i, j, temp;
    printf("Enter an array size: ");
    scanf("%d", &size);
    int arr[size];
    printf("Enter number of rotation: ");
    scanf("%d", &m);
    printf("Enter numbers for your array: ");
    for (i = 0; i < size; i++)
        scanf("%d", &arr[i]);
    for (i = 0; i < m; i++)
    {
        temp = arr[0];
        for (j = 0; j < size - 1; j++)
            arr[j] = arr[j + 1];
        arr[size - 1] = temp;
    }
    printf("Results: ");
    for (i = 0; i < size; i++)
        printf("%d ", arr[i]);
    return 0;
}


//Answer of 2

#include <stdio.h>

int main() {
    int length, areas, i, j, k;
    int start[100], end[100];

    printf("Enter the length of the road: ");
    scanf("%d", &length);

    printf("Enter how many areas are needed for new facilities: ");
    scanf("%d", &areas);

    for (i = 0; i < areas; i++) {
        printf("area#%d starting point & ending point: ", i + 1);
        scanf("%d %d", &start[i], &end[i]);
    }

    for (i = 0; i < areas; i++) {
        for (j = 0; j < areas; j++) {
            if (start[i] < start[j]) {
                int temp = start[i];
                start[i] = start[j];
                start[j] = temp;

                temp = end[i];
                end[i] = end[j];
                end[j] = temp;
            }
        }
    }

    for (i = 0; i < areas; i++) {
        for (j = 0; j < areas; j++) {
            if (start[i] == start[j] && end[i] < end[j]) {
                int temp = start[i];
                start[i] = start[j];
                start[j] = temp;

                temp = end[i];
                end[i] = end[j];
                end[j] = temp;
            }
        }
    }

    for (i = 0; i < areas; i++) {
        for (j = i + 1; j < areas; j++) {
            if (start[i] == start[j] && end[i] == end[j]) {
                start[j] = end[j] = 0;
            }
        }
    }

    for (i = 0; i < areas; i++) {
        for (j = i + 1; j < areas; j++) {
            if (start[i] == start[j] && end[i] == end[j]) {
                start[j] = end[j] = 0;
            }
        }
    }

    for (i = 0; i < areas; i++) {
        for (j = i + 1; j < areas; j++) {
            if (start[i] == start[j] && end[i] == end[j]) {
                start[j] = end[j] = 0;
            }
        }
    }

    int count = 0;
    for (i = 0; i < areas; i++) {
        if (start[i] != 0 && end[i] != 0) {
            count += end[i] - start[i] + 1;
        }
    }

    int empty = length - count;
    printf("Minimum length of the road to be built: %d", empty);

    return 0;
}



//Answer of 3

#include <stdio.h>
int main()
{
    int num;
    printf("Enter a number: ");
    scanf("%d", &num);
    if (num % 3 == 0 && num % 5 == 0 && num % 7 == 0)
    {
        printf("3,5,7");
    }
    else if (num % 3 == 0 && num % 5 == 0)
    {
        printf("3,5");
    }
    else if (num % 3 == 0 && num % 7 == 0)
    {
        printf("3,7");
    }
    else if (num % 5 == 0 && num % 7 == 0)
    {
        printf("5,7");
    }
    else if (num % 3 == 0)
    {
        printf("3");
    }
    else if (num % 5 == 0)
    {
        printf("5");
    }
    else if (num % 7 == 0)
    {
        printf("7");
    }
    else
    {
        printf("NOT");
    }
    return 0;
}




//Answer of 4

#include <stdio.h>

int main() {
    int b, d, t, h;

    // Loop through all possible combinations of lake sizes
    for (b = 1; b <= 4; b++) {
        for (d = 1; d <= 4; d++) {
            for (t = 1; t <= 4; t++) {
                for (h = 1; h <= 4; h++) {

                    // Ensure that all lakes have different sizes
                    if (b != d && b != t && b != h && d != t && d != h && t != h) {

                        // Check the statements made by each student
                        if (d == 1 && h == 4 && b == 3 && t != 2) {
                            printf("d > b > t > h\n");
                            return 0;
                        }
                        if (h == 4 && d == 4 && b == 2 && t == 3) {
                            printf("h > b > t > d\n");
                            return 0;
                        }
                        if (h == 1 && d != 2 && b != 2 && t != 2) {
                            printf("b > d > t > h\n");
                            return 0;
                        }
                        if (b == 4 && t == 1 && h == 2 && d == 3) {
                            printf("b > t > h > d\n");
                            return 0;
                        }

                    }
                }
            }
        }
    }

    // If none of the combinations satisfy all the statements, print an error message
    printf("No valid solution found.\n");
    return 0;
}

//Answer of 5

#include <stdio.h>
int main()
{
    int n;
    printf("Enter a number: ");
    scanf("%d", &n);
    printf("Hailstone sequence is: ");
    while (n != 1)
    {
        printf("%d ", n);
        if (n % 2 == 0)
            n = n / 2;
        else
            n = 3 * n + 1;
    }
    printf("%d", n);
    return 0;
}
